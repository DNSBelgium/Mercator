management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=ALWAYS

cloud.aws.stack.auto=false

spring.flyway.schemas=tls_crawler

spring.jpa.properties.hibernate.types.print.banner=false

tls.crawler.input.queue.name=mercator-tls-crawler-input
crawler.ack.queue-name=mercator-dispatcher-ack

tls.crawler.allow.noop = false
tls.crawler.visit.www = true
tls.crawler.visit.apex = true

full.scan.cache.enabled = true
# How many times do we have to scan an IP before using a cached results
full.scan.cache.minimum.entries.per.ip=5

# Minimum percentage of scans on a given IP need to have the same config before using that cached config for new domains on that IP
full.scan.cache.required.ratio=0.90

# rate limits
rate.limiter.max.cache.size=20000
rate.limiter.delay.factor=0.85
rate.limiter.min.delay.ms=50
rate.limiter.max.delay.ms=500

spring.jpa.open-in-view=false
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.javax.persistence.sharedCache.mode = ENABLE_SELECTIVE
spring.jpa.properties.hibernate.javax.cache.provider = org.ehcache.jsr107.EhcacheCachingProvider

# see https://stackoverflow.com/a/54774762
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.hibernate.javax.cache.uri=classpath:ehcache.xml

server.port=8092

messaging.sqs.numberOfMessagesToPrefetch=10
messaging.jms.concurrency=1-40
messaging.sqs.maxConnections=50

tls.crawler.skip.ipv4=false
tls.crawler.skip.ipv6=true

spring.main.banner-mode=off
logging.level.root=INFO
logging.level.be.dnsbelgium=INFO
logging.level.com.amazon.sqs=WARN
logging.level.be.dnsbelgium.mercator=INFO
