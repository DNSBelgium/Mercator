plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.google.cloud.tools.jib'
    id 'java'
    id 'com.citi.helm'
}

version = '0.0.1-' + getCommitHash()

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':common-messaging')
    implementation project(':common-messaging-aws')
    implementation project(':content-crawler-persistence')
    implementation project(':feature-extraction-persistence')
    implementation project(':content-crawler-dto')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // JSON logging
    implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"
    implementation project(':mercator-throttling-appender')

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation 'com.amazonaws:aws-java-sdk-s3'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.15.3'

    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.apache.commons:commons-text:1.10.0'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.9.2'

    implementation 'com.github.pemistahl:lingua:1.1.0'

    implementation 'org.apache.poi:poi:5.2.2'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation testFixtures(project(':common-testing'))

    testImplementation 'commons-io:commons-io:2.11.0'
}

jib {
    container {
        jvmFlags = ['-XX:MaxRAMPercentage=85.0']
    }
}

test {
    useJUnitPlatform()
    minHeapSize = "128m"
    maxHeapSize = "4096m"
}
