plugins {
  id "com.jetbrains.python.envs" version "0.0.31"
  id 'org.unbroken-dome.helm'
}

version = '0.0.1-' + getCommitHash()

envs {
  bootstrapDirectory = new File(buildDir, 'bootstrap')
  envsDirectory = new File(buildDir, 'envs')

  python "python39_64", "3.9.9", "64", []
  virtualenv "envPython39", "python39_64", []
}

tasks.register('test', Exec) {
  dependsOn tasks.build_envs

  executable 'sh'
  args '-c', 'source build/envs/envPython39/bin/activate ' +
          '&& pip3 install -r requirements.txt' +
          '&& cd src/' +
          "&& PYTHONPATH=\"test:ssl_crawler\" SSL_CRAWLER_ENV=test python3 -m xmlrunner discover -t . -s test -o $buildDir/test-results/test/"
}

tasks.register('build') {
    dependsOn tasks.test
}

tasks.register('dockerBuild', Exec) {
  def registry = ""
  if (project.hasProperty("dockerRegistry")) {
    registry = project.getProperty("dockerRegistry")
  }
  def tags = "-t ${registry}dnsbelgium/mercator/${project.name}:${project.version} -t ${registry}dnsbelgium/mercator/${project.name}:${getCommitHash()} -t ${registry}dnsbelgium/mercator/${project.name}:${getCommitHash()}"
  if (registry == "") {
    tags += " -t dnsbelgium/mercator/${project.name}:local"
  }
  if (project.hasProperty("dockerTags")) {
    project.getProperty('dockerTags').split(',').each {
      tags += " -t ${registry}dnsbelgium/mercator/${project.name}:$it"
    }
  }

  executable 'sh'
  args '-c', "docker build $tags ."
}

tasks.register('dockerPush', Exec) {
  def registry = ""
  if (project.hasProperty("dockerRegistry")) {
    registry = project.getProperty("dockerRegistry")
  }

  executable 'sh'
  args '-c', "docker push ${registry}dnsbelgium/mercator/${project.name}:${project.version} && docker push ${registry}dnsbelgium/mercator/${project.name}:${getCommitHash()}"
}

tasks.register('dockerBuildAndPush') {
  dependsOn tasks.dockerBuild, tasks.dockerPush
}

helm.charts {
  main {
    sourceDir = file('helm')
  }
}
