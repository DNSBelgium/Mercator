# Default values for dns-crawler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dnsbelgium/mercator/dns-crawler
  pullPolicy: IfNotPresent
  tag: k8s

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: ""
  name: ""

podAnnotations:
  prometheus.io/scrape_https: "true"
  prometheus.io/port: "8443"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/scheme: "https"

podSecurityContext:
  runAsUser: 10000
  fsGroup: 10000
  supplementalGroups:
    - 10000

securityContext:
  runAsUser: 10000
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  seccompProfile:
    type: RuntimeDefault

resources:
  requests:
    cpu: 100m
    memory: 600M
  limits:
    cpu: 500m
    memory: 600M

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - dns-crawler
        topologyKey: kubernetes.io/hostname

queue_in:
queue_ack:
resolver:
database:
  url: "jdbc:postgresql://localhost:5432/postgres?currentSchema=dns_crawler"
  schema: "dns_crawler"
  username: "postgres"
  password: "password"
geoip:
  key:
extraEnv: {}

global:
  # environment to deploy to, can be "local" or "aws"
  environment: "local"
  region: "eu-west-1"
  vpc:
    db_cidr:
      - "127.0.0.1/32"
    endpoint_cidr:
      - "127.0.0.1/32"

updateStrategy: Recreate

prometheusRule:
  enabled: false
  failure_rate: 0.01
  period: 5m
